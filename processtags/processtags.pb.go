// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.27.0
// source: processtags.proto

package processtags

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestRun       *TestRun               `protobuf:"bytes,1,opt,name=test_run,json=testRun,proto3" json:"test_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessTagsRequest) Reset() {
	*x = ProcessTagsRequest{}
	mi := &file_processtags_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTagsRequest) ProtoMessage() {}

func (x *ProcessTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_processtags_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTagsRequest.ProtoReflect.Descriptor instead.
func (*ProcessTagsRequest) Descriptor() ([]byte, []int) {
	return file_processtags_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessTagsRequest) GetTestRun() *TestRun {
	if x != nil {
		return x.TestRun
	}
	return nil
}

type ProcessTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessTagsResponse) Reset() {
	*x = ProcessTagsResponse{}
	mi := &file_processtags_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTagsResponse) ProtoMessage() {}

func (x *ProcessTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_processtags_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTagsResponse.ProtoReflect.Descriptor instead.
func (*ProcessTagsResponse) Descriptor() ([]byte, []int) {
	return file_processtags_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessTagsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessTagsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type TestRun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuiteRuns     []*SuiteRun            `protobuf:"bytes,1,rep,name=suite_runs,json=suiteRuns,proto3" json:"suite_runs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRun) Reset() {
	*x = TestRun{}
	mi := &file_processtags_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRun) ProtoMessage() {}

func (x *TestRun) ProtoReflect() protoreflect.Message {
	mi := &file_processtags_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRun.ProtoReflect.Descriptor instead.
func (*TestRun) Descriptor() ([]byte, []int) {
	return file_processtags_proto_rawDescGZIP(), []int{2}
}

func (x *TestRun) GetSuiteRuns() []*SuiteRun {
	if x != nil {
		return x.SuiteRuns
	}
	return nil
}

type SuiteRun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpecRuns      []*SpecRun             `protobuf:"bytes,1,rep,name=spec_runs,json=specRuns,proto3" json:"spec_runs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuiteRun) Reset() {
	*x = SuiteRun{}
	mi := &file_processtags_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuiteRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiteRun) ProtoMessage() {}

func (x *SuiteRun) ProtoReflect() protoreflect.Message {
	mi := &file_processtags_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiteRun.ProtoReflect.Descriptor instead.
func (*SuiteRun) Descriptor() ([]byte, []int) {
	return file_processtags_proto_rawDescGZIP(), []int{3}
}

func (x *SuiteRun) GetSpecRuns() []*SpecRun {
	if x != nil {
		return x.SpecRuns
	}
	return nil
}

type SpecRun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecRun) Reset() {
	*x = SpecRun{}
	mi := &file_processtags_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecRun) ProtoMessage() {}

func (x *SpecRun) ProtoReflect() protoreflect.Message {
	mi := &file_processtags_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecRun.ProtoReflect.Descriptor instead.
func (*SpecRun) Descriptor() ([]byte, []int) {
	return file_processtags_proto_rawDescGZIP(), []int{4}
}

func (x *SpecRun) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_processtags_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_processtags_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_processtags_proto_rawDescGZIP(), []int{5}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_processtags_proto protoreflect.FileDescriptor

var file_processtags_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x45, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x22, 0x54, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a,
	0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x69, 0x74,
	0x65, 0x5f, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x09, 0x73, 0x75, 0x69, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x22, 0x3d,
	0x0a, 0x08, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x75, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x52, 0x75, 0x6e, 0x73, 0x22, 0x2f, 0x0a,
	0x07, 0x53, 0x70, 0x65, 0x63, 0x52, 0x75, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x74, 0x61, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x19,
	0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x5e, 0x0a, 0x0a, 0x54, 0x61, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x74, 0x61, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x74, 0x61, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_processtags_proto_rawDescOnce sync.Once
	file_processtags_proto_rawDescData = file_processtags_proto_rawDesc
)

func file_processtags_proto_rawDescGZIP() []byte {
	file_processtags_proto_rawDescOnce.Do(func() {
		file_processtags_proto_rawDescData = protoimpl.X.CompressGZIP(file_processtags_proto_rawDescData)
	})
	return file_processtags_proto_rawDescData
}

var file_processtags_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_processtags_proto_goTypes = []any{
	(*ProcessTagsRequest)(nil),  // 0: processtags.ProcessTagsRequest
	(*ProcessTagsResponse)(nil), // 1: processtags.ProcessTagsResponse
	(*TestRun)(nil),             // 2: processtags.TestRun
	(*SuiteRun)(nil),            // 3: processtags.SuiteRun
	(*SpecRun)(nil),             // 4: processtags.SpecRun
	(*Tag)(nil),                 // 5: processtags.Tag
}
var file_processtags_proto_depIdxs = []int32{
	2, // 0: processtags.ProcessTagsRequest.test_run:type_name -> processtags.TestRun
	3, // 1: processtags.TestRun.suite_runs:type_name -> processtags.SuiteRun
	4, // 2: processtags.SuiteRun.spec_runs:type_name -> processtags.SpecRun
	5, // 3: processtags.SpecRun.tags:type_name -> processtags.Tag
	0, // 4: processtags.TagService.ProcessTags:input_type -> processtags.ProcessTagsRequest
	1, // 5: processtags.TagService.ProcessTags:output_type -> processtags.ProcessTagsResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_processtags_proto_init() }
func file_processtags_proto_init() {
	if File_processtags_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_processtags_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_processtags_proto_goTypes,
		DependencyIndexes: file_processtags_proto_depIdxs,
		MessageInfos:      file_processtags_proto_msgTypes,
	}.Build()
	File_processtags_proto = out.File
	file_processtags_proto_rawDesc = nil
	file_processtags_proto_goTypes = nil
	file_processtags_proto_depIdxs = nil
}
